<!DOCTYPE html>
<html lang="vi">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>üí¨ Chat v·ªõi Emoji 1000+</title>
  <link href="https://fonts.googleapis.com/css2?family=Quicksand:wght@500&family=Roboto&display=swap" rel="stylesheet">
  <script src="emoji.js"></script>
  <style>
    body {
      font-family: 'Roboto', sans-serif;
      background: #f0f0f0;
      margin: 0;
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
    }
    .chat-container {
      width: 100%;
      max-width: 600px;
      background: #fff;
      padding: 20px;
      border-radius: 10px;
      box-shadow: 0 0 10px rgba(0,0,0,0.1);
    }
    #chat-box {
      height: 300px;
      overflow-y: auto;
      background: #fafafa;
      border: 1px solid #ccc;
      padding: 10px;
      margin-bottom: 10px;
      border-radius: 6px;
    }
    .msg {
      background: #e3f2fd;
      padding: 10px 12px;
      margin-bottom: 12px;
      border-radius: 6px;
      position: relative;
      border-left: 5px solid #2196f3;
    }
    .msg .quote {
      font-size: 0.85em;
      background: #f0f7ff;
      border-left: 4px solid #64b5f6;
      padding: 8px 12px;
      margin-bottom: 8px;
      border-radius: 4px;
      margin-left: 10px;
      color: #333;
    }
    .msg b {
      font-family: 'Quicksand', sans-serif;
      font-weight: 500;
      color: #1565c0;
    }
    .msg .reply, .msg .like {
      position: absolute;
      bottom: 6px;
      font-size: 0.9em;
      cursor: pointer;
    }
    .msg .reply {
      right: 45px;
      color: #1565c0;
    }
    .msg .like {
      right: 10px;
      color: #e91e63;
    }
    .emoji-bar {
      margin-bottom: 8px;
    }
    .emoji-toggle {
      cursor: pointer;
      background: #2196f3;
      color: white;
      border: none;
      padding: 6px 10px;
      border-radius: 4px;
    }
    .emoji-tabs {
      display: flex;
      gap: 5px;
      margin-bottom: 10px;
    }
    .emoji-tabs button {
      background: #e0e0e0;
      border: none;
      padding: 6px 10px;
      border-radius: 4px;
      cursor: pointer;
    }
    .emoji-tabs button.active {
      background: #2196f3;
      color: white;
    }
    .emoji-panel {
      display: none;
      max-height: 150px;
      overflow-y: auto;
      border: 1px solid #ccc;
      padding: 10px;
      border-radius: 6px;
      background: #f5f5f5;
      margin-bottom: 10px;
    }
    .emoji {
      cursor: pointer;
      font-size: 1.3em;
      margin: 4px;
    }
    form {
      display: flex;
      flex-direction: column;
      gap: 10px;
    }
    input[type="text"] {
      padding: 10px;
      border-radius: 6px;
      border: 1px solid #ccc;
      font-family: 'Quicksand', sans-serif;
    }
    button[type="submit"] {
      padding: 10px;
      background: #2196f3;
      color: white;
      border: none;
      border-radius: 6px;
      cursor: pointer;
    }
  </style>
</head>
<body>
<div class="chat-container">
  <div id="chat-box"></div>

  <div class="emoji-bar">
    <button class="emoji-toggle" onclick="toggleEmojiPanel()">üòÄ M·ªü Emoji</button>
  </div>

  <div id="emoji-section" style="display:none">
    <div class="emoji-tabs" id="emoji-tabs"></div>
    <div class="emoji-panel" id="emoji-panel"></div>
  </div>

  <form onsubmit="sendMessage(event)">
    <input type="text" id="name" placeholder="T√™n b·∫°n" required>
    <input type="text" id="message" placeholder="N·ªôi dung chat" required>
    <input type="hidden" id="reply-name">
    <input type="hidden" id="reply-text">
    <button type="submit">G·ª≠i</button>
  </form>
</div>

<script>
const scriptURL = 'https://script.google.com/macros/s/AKfycbyu3AiwbOl-ucqjNLf5rHchmMr2hOjmObfgLI3EBxcD6PXHXsIIXQqEk8e7WhGS3V9Jsg/exec';

function toggleEmojiPanel() {
  const section = document.getElementById("emoji-section");
  section.style.display = section.style.display === "none" ? "block" : "none";
}

function renderEmojiTabs() {
  const tabs = document.getElementById("emoji-tabs");
  tabs.innerHTML = "";
  for (let group in emojiData) {
    const btn = document.createElement("button");
    btn.textContent = group;
    btn.onclick = () => selectEmojiGroup(group, btn);
    tabs.appendChild(btn);
  }
  tabs.querySelector("button").classList.add("active");
  selectEmojiGroup(Object.keys(emojiData)[0]);
}

function selectEmojiGroup(group, btn) {
  document.querySelectorAll(".emoji-tabs button").forEach(b => b.classList.remove("active"));
  if (btn) btn.classList.add("active");
  const panel = document.getElementById("emoji-panel");
  panel.innerHTML = "";
  emojiData[group].forEach(e => {
    const span = document.createElement("span");
    span.className = "emoji";
    span.textContent = e;
    span.onclick = () => addEmoji(e);
    panel.appendChild(span);
  });
  document.querySelector(".emoji-panel").style.display = "block";
}

function addEmoji(emoji) {
  const msg = document.getElementById("message");
  msg.value += emoji;
  msg.focus();
}

function replyTo(name, text) {
  document.getElementById("reply-name").value = name;
  document.getElementById("reply-text").value = text;
  document.getElementById("message").value = `@${name}: `;
  document.getElementById("message").focus();
}

async function sendMessage(e) {
  e.preventDefault();
  const name = document.getElementById("name").value;
  const message = document.getElementById("message").value;
  const replyName = document.getElementById("reply-name").value;
  const replyText = document.getElementById("reply-text").value;

  const formData = new URLSearchParams();
  formData.append("name", name);
  formData.append("message", message);
  formData.append("replyTo", replyName);
  formData.append("replyMsg", replyText);

  await fetch(scriptURL, {
    method: "POST",
    body: formData,
    headers: { 'Content-Type': 'application/x-www-form-urlencoded' }
  });

  localStorage.setItem("chatName", name);
  document.getElementById("message").value = "";
  document.getElementById("reply-name").value = "";
  document.getElementById("reply-text").value = "";
  loadMessages();
}

async function loadMessages() {
  const res = await fetch(scriptURL);
  const data = await res.json();
  const chatBox = document.getElementById("chat-box");
  chatBox.innerHTML = "";
  data.forEach(([time, name, message, replyTo, replyMsg]) => {
    const quote = replyTo && replyMsg ? `<div class='quote'>üí¨ <b>@${replyTo}</b>: ${replyMsg}</div>` : "";
    chatBox.innerHTML += `
      <div class="msg">
        ${quote}
        <div><b>${name}</b>: ${message}</div>
        <div class="reply" onclick="replyTo('${name}', \`${message.replace(/`/g, '\\`')}\`)">‚Ü©Ô∏è Tr·∫£ l·ªùi</div>
        <div class="like" onclick="alert('üëç')">‚ù§Ô∏è</div>
      </div>
    `;
  });
  chatBox.scrollTop = chatBox.scrollHeight;
}

window.onload = () => {
  const savedName = localStorage.getItem("chatName");
  if (savedName) document.getElementById("name").value = savedName;
  renderEmojiTabs();
  loadMessages();
  setInterval(loadMessages, 5000);
};
</script>
</body>
</html>
